--read 4 byte
//CS L
	0x55<-0x56;
	0x57<-0xC0;
	0x55<-0x5a;
	0x56-> RD;	//dummy
	0x56-> RD;
	while(RD & 0x10 != 0x10) {
        0x56-> RD;
    }
//write: CMD + addr*3
		0x55<-0x59;
		0x57<-0x03;     //INPUT CMD
		0x55<-0x5a;
		0x56-> RD;		//dummy
		0x56-> RD;
		while(RD & 0x08 != 0x08) {
            0x56-> RD;
        }
		0x55<-0x5b;
		0x56-> RD;	//dummy
		0x56-> RD;	//discard data
//		
		0x55<-0x59;
		0x57<-ADDR1;     //INPUT addr1
		0x55<-0x5a;
		0x56-> RD;		//dummy
		0x56-> RD;
		while(RD & 0x08 != 0x08) {
            0x56-> RD;
        }
		0x55<-0x5b;
		0x56-> RD;	//dummy
		0x56-> RD;	//discard data
//		
		0x55<-0x59;
		0x57<-ADDR2;     //INPUT addr2
		0x55<-0x5a;
		0x56-> RD;		//dummy
		0x56-> RD;
		while(RD & 0x08 != 0x08) {
            0x56-> RD;
        }
		0x55<-0x5b;
		0x56-> RD;	//dummy
		0x56-> RD;	//discard data
//		
		0x55<-0x59;
		0x57<-ADDR3;     //INPUT addr2
		0x55<-0x5a;
		0x56-> RD;		//dummy
		0x56-> RD;
		while(RD & 0x08 != 0x08) {
            0x56-> RD;
        }
		0x55<-0x5b;
		0x56-> RD;	//dummy
		0x56-> RD;	//discard data
//read: data*4 		
        0x55<-0x59;
        0x57<-0x0;      
        0x55<-0x5a;
        0x56-> RD;	//dummy
        0x56-> RD;
        while(RD & 0x08 != 0x08) {
            0x56-> RD;
        }
        0x55<-0x5b;
        0x56-> RD;	//dummy
        0x56-> DATA1;	//OUTPUT Data1
//		
        0x55<-0x59;
        0x57<-0x0;      
        0x55<-0x5a;
        0x56-> RD;	//dummy
        0x56-> RD;
        while(RD & 0x08 != 0x08) {
            0x56-> RD;
        }
        0x55<-0x5b;
        0x56-> RD;	//dummy
        0x56-> DATA2;	//OUTPUT Data2
//
        0x55<-0x59;
        0x57<-0x0;      
        0x55<-0x5a;
        0x56-> RD;	//dummy
        0x56-> RD;
        while(RD & 0x08 != 0x08) {
            0x56-> RD;
        }
        0x55<-0x5b;
        0x56-> RD;	//dummy
        0x56-> DATA3;	//OUTPUT Data3
//		
        0x55<-0x59;
        0x57<-0x0;      
        0x55<-0x5a;
        0x56-> RD;	//dummy
        0x56-> RD;
        while(RD & 0x08 != 0x08) {
            0x56-> RD;
        }
        0x55<-0x5b;
        0x56-> RD;	//dummy
        0x56-> DATA4;	//OUTPUT Data4		
//CS H
	0x55<-0x56;
	0x57<-0x80;
}

--SECTOR ERASE 4KB
//CS L
	0x55<-0x56;
	0x57<-0xC4;
	0x55<-0x5a;
	0x56-> RD;	//dummy
	0x56-> RD;
	while(RD & 0x10 != 0x10) {
        0x56-> RD;
    }
//ERASE: CMD + ADDR*3	
		0x55<-0x59;
		0x57<-0x20;  //INPUT CMD
		0x55<-0x5a;
		0x56-> RD;	//dummy
		0x56-> RD;
		while(RD & 0x08 != 0x08) {
            0x56-> RD;
        }
		0x55<-0x5b;
		0x56-> RD;	//dummy
		0x56-> RD;	//discard data
//
		0x55<-0x59;
		0x57<-ADD1;  //INPUT ADD1
		0x55<-0x5a;
		0x56-> RD;	//dummy
		0x56-> RD;
		while(RD & 0x08 != 0x08) {
            0x56-> RD;
        }
		0x55<-0x5b;
		0x56-> RD;	//dummy
		0x56-> RD;	//discard data
//
		0x55<-0x59;
		0x57<-ADD2;  //INPUT ADD2
		0x55<-0x5a;
		0x56-> RD;	//dummy
		0x56-> RD;
		while(RD & 0x08 != 0x08) {
            0x56-> RD;
        }
		0x55<-0x5b;
		0x56-> RD;	//dummy
		0x56-> RD;	//discard data	
//
		0x55<-0x59;
		0x57<-ADD3;  //INPUT ADD3
		0x55<-0x5a;
		0x56-> RD;	//dummy
		0x56-> RD;
		while(RD & 0x08 != 0x08) {
            0x56-> RD;
        }
		0x55<-0x5b;
		0x56-> RD;	//dummy
		0x56-> RD;	//discard data			
//CS H
	0x55<-0x56;
	0x57<-0x80;
}

--write 4Byte data
WT_NDATA(int N) {
//CS L
	0x55<-0x56;
	0x57<-0xC4;
	0x55<-0x5a;
	0x56-> RD;	//dummy
	0x56-> RD;
	while(RD & 0x10 != 0x10) {
        0x56-> RD;
    }
//WRITE: CMD + ADDR*3
		0x55<-0x59;
		0x57<-0x02;  //INPUT CMD
		0x55<-0x5a;
		0x56-> RD;	//dummy
		0x56-> RD;
		while(RD & 0x08 != 0x08) {
            0x56-> RD;
        }
		0x55<-0x5b;
		0x56-> RD;	//dummy
		0x56-> RD;	//discard data
//		
		0x55<-0x59;
		0x57<-ADDR1;  //INPUT ADDR1
		0x55<-0x5a;
		0x56-> RD;	//dummy
		0x56-> RD;
		while(RD & 0x08 != 0x08) {
            0x56-> RD;
        }
		0x55<-0x5b;
		0x56-> RD;	//dummy
		0x56-> RD;	//discard data
//		
		0x55<-0x59;
		0x57<-ADDR2;  //INPUT ADDR2
		0x55<-0x5a;
		0x56-> RD;	//dummy
		0x56-> RD;
		while(RD & 0x08 != 0x08) {
            0x56-> RD;
        }
		0x55<-0x5b;
		0x56-> RD;	//dummy
		0x56-> RD;	//discard data
//		
		0x55<-0x59;
		0x57<-ADDR3;  //INPUT ADDR3
		0x55<-0x5a;
		0x56-> RD;	//dummy
		0x56-> RD;
		while(RD & 0x08 != 0x08) {
            0x56-> RD;
        }
		0x55<-0x5b;
		0x56-> RD;	//dummy
		0x56-> RD;	//discard data
//		
		0x55<-0x59;
		0x57<-ADDR4;  //INPUT ADDR4
		0x55<-0x5a;
		0x56-> RD;	//dummy
		0x56-> RD;
		while(RD & 0x08 != 0x08) {
            0x56-> RD;
        }
		0x55<-0x5b;
		0x56-> RD;	//dummy
		0x56-> RD;	//discard data
//CS H
	0x55<-0x56;
	0x57<-0x80;
}




